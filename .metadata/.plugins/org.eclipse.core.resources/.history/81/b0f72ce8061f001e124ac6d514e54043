package com.tas.Swagger.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

@Configuration
@EnableSwagger2
public class SwaggerConfig {

    @Bean
    public Docket api() {
        return new Docket(DocumentationType.SWAGGER_2)
                .select()
                .apis(RequestHandlerSelectors.basePackage(" com.tas.Swagger.controller"))
                .paths(PathSelectors.any())
                .build()
                .apiInfo(apiInfo());
    }
    private ApiInfo apiInfo() {
        return new ApiInfoBuilder()
                .title("Your API Documentation")
                .description("API documentation for your Spring Boot application")
                .version("1.0.0")
                .build();
    }
}
In the apis() method, you need to specify the base package where your controller classes are located.

Step 3: Run your Spring Boot application, and access the Swagger UI. Once your application is running, you can access the Swagger UI at http://localhost:8080/swagger-ui/index.html. You should see a Swagger UI interface with the generated documentation for your API.

Step 4: Add Swagger annotations to your controllers. To provide more information and details for your API endpoints, you can use annotations such as @ApiOperation, @ApiParam, and others from the io.swagger.annotations package. Here's an example:

java
Copy code
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api")
@Api(tags = "Example API")
public class ExampleController {

    @GetMapping("/hello/{name}")
    @ApiOperation("Get a personalized greeting")
    public String getGreeting(
            @ApiParam(value = "Name to greet", example = "John") @PathVariable String name) {
        return "Hello, " + name + "!";
    }
}







package com.api.Soap.service;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.server.ResponseStatusException;
import org.springframework.http.HttpStatus;

import com.api.Soap.entities.Employee;
import com.api.Soap.inter.AddEmployeeRequest;
import com.api.Soap.inter.AddEmployeeResponse;
import com.api.Soap.inter.EmployeeInfo;
import com.api.Soap.inter.GetEmployeeRequest;
import com.api.Soap.inter.GetEmployeeResponse;
import com.api.Soap.inter.ServiceStatus;
import com.api.Soap.repo.EmployeeRepository;
import com.api.Soap.serviceImpl.EmployeeHelper;

@Service
@Transactional  // Transactional annotation for managing transactions
public class EmployeeService implements IEmployeeService {

    private final EmployeeRepository employeeRepository;
    private final EmployeeHelper employeeHelper;

    @Autowired
    public EmployeeService(EmployeeRepository employeeRepository, EmployeeHelper employeeHelper) {
        this.employeeRepository = employeeRepository;
        this.employeeHelper = employeeHelper;
    }

    @Override
    public AddEmployeeResponse addEmployee(AddEmployeeRequest request) {
        Employee empModel = employeeHelper.prepareEmployeeModel(request);
        employeeRepository.save(empModel);

        AddEmployeeResponse response = new AddEmployeeResponse();
        ServiceStatus serviceStatus = new ServiceStatus();
        serviceStatus.setStatus("SUCCESS");
        serviceStatus.setMessage("Content Added Successfully");
        response.setServiceStatus(serviceStatus);

        return response;
    }

    @Override
    public GetEmployeeResponse getEmployeeById(GetEmployeeRequest request) {
        Employee obj = employeeRepository.findByEmployeeId(request.getEmployeeId());
        if (obj == null) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, "Employee not found");
        }

        GetEmployeeResponse getEmployeeResponse = new GetEmployeeResponse();
        EmployeeInfo employeeInfo = new EmployeeInfo();
        BeanUtils.copyProperties(obj, employeeInfo);
        getEmployeeResponse.setEmployeeInfo(employeeInfo);

        return getEmployeeResponse;
    }

    @Override
    public void updateEmployee(Employee employee) {
        employeeRepository.save(employee);
    }

    @Override
    public void deleteEmployee(long employeeId) {
        employeeRepository.deleteById(employeeId);
    }
}
